[
  {
    "id": "b0f4d218-234d-4234-8ce0-11de617317fa",
    "userId": "6ddf0023-1d2a-4af3-bbbe-41612061a0d8",
    "function": {
      "id": "custom_action",
      "name": "Example Action",
      "meta": {
        "description": "example action",
        "manifest": {
          "title": "Example Action",
          "author": "open-webui",
          "author_url": "https://github.com/open-webui",
          "funding_url": "https://github.com/open-webui",
          "version": "0.1.0",
          "required_open_webui_version": "0.3.9"
        },
        "type": "action"
      },
      "content": "\"\"\"\ntitle: Example Action\nauthor: open-webui\nauthor_url: https://github.com/open-webui\nfunding_url: https://github.com/open-webui\nversion: 0.1.0\nrequired_open_webui_version: 0.3.9\n\"\"\"\n\nfrom pydantic import BaseModel, Field\nfrom typing import Optional, Union, Generator, Iterator\n\nimport os\nimport requests\nimport asyncio\n\n\nclass Action:\n    class Valves(BaseModel):\n        pass\n\n    def __init__(self):\n        self.valves = self.Valves()\n        pass\n\n    async def action(\n        self,\n        body: dict,\n        __user__=None,\n        __event_emitter__=None,\n        __event_call__=None,\n    ) -> Optional[dict]:\n        print(f\"action:{__name__}\")\n\n        response = await __event_call__(\n            {\n                \"type\": \"input\",\n                \"data\": {\n                    \"title\": \"write a message\",\n                    \"message\": \"here write a message to append\",\n                    \"placeholder\": \"enter your message\",\n                },\n            }\n        )\n        print(response)\n\n        if __event_emitter__:\n            await __event_emitter__(\n                {\n                    \"type\": \"status\",\n                    \"data\": {\"description\": \"adding message\", \"done\": False},\n                }\n            )\n            await asyncio.sleep(1)\n            await __event_emitter__({\"type\": \"message\", \"data\": {\"content\": response}})\n            await __event_emitter__(\n                {\n                    \"type\": \"status\",\n                    \"data\": {\"description\": \"added message\", \"done\": True},\n                }\n            )\n"
    },
    "info": {},
    "downloads": 1727,
    "upvotes": 0,
    "downvotes": 0,
    "updatedAt": 1721480135,
    "createdAt": 1721480135,
    "user": {
      "id": "6ddf0023-1d2a-4af3-bbbe-41612061a0d8",
      "username": "hub",
      "name": "Community",
      "createdAt": 1701489294,
      "role": "mod",
      "verified": false
    }
  }
]
